CREATE SCHEMA `learning-plan` ;


REGISTRATION 

CREATE TABLE `learning-plan`.`registration` (
  `registration_id` INT NOT NULL AUTO_INCREMENT,
  `emp_id` VARCHAR(45) NOT NULL,
  `user_name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`registration_id`),
  UNIQUE INDEX `emp_id_UNIQUE` (`emp_id` ASC) VISIBLE,
  UNIQUE INDEX `user_name_UNIQUE` (`user_name` ASC) VISIBLE);


SECURITY QUESTIONS


CREATE TABLE `learning-plan`.`security_question` (
  `security_question_id` INT NOT NULL AUTO_INCREMENT,
  `question` VARCHAR(45) NOT NULL,
  `answer` VARCHAR(45) NOT NULL,
  `registration_id` INT NULL,
  PRIMARY KEY (`security_question_id`),
  CONSTRAINT `registration_id `
    FOREIGN KEY (`security_question_id`)
    REFERENCES `learning-plan`.`registration` (`registration_id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE);

   TECHNOLOGY STACK

CREATE TABLE `learning-plan`.`technology_stack` (
  `technology_stack_id` INT NOT NULL AUTO_INCREMENT,
  `technology` VARCHAR(45) NOT NULL,
  `level` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`technology_stack_id`));


  LEARNING STATUS

CREATE TABLE `learning-plan`.`learning_status` (
  `learning_status_id` INT NOT NULL AUTO_INCREMENT,
  `emp_id` VARCHAR(45) NOT NULL,
  `percentage` INT NOT NULL,
  `last_week_percentage` INT NOT NULL,
  PRIMARY KEY (`learning_status_id`));




